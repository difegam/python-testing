name: CI

on:
  push:
  pull_request:

jobs:
  run-tests:
    strategy:
      fail-fast: true
      #   max-parallel: 2
      matrix:
        os: ["ubuntu-20.04", "macos-latest", "windows-latest"]
        python-version: ["3.10", "3.11"]

    name: Test
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Update PATH
        if: ${{ matrix.os != 'Windows' }}
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Update Path for Windows
        if: ${{ matrix.os == 'Windows' }}
        run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

      - name: Enable long paths for git on Windows
        if: ${{ matrix.os == 'Windows' }}
        run: git config --system core.longpaths true

      - name: Set up cache
        id: cache-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        if: steps.cache-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Run Tests
        run: poetry run pytest
